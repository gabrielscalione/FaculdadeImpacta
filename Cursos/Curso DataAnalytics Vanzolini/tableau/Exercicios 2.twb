<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1203.1123                               -->
<workbook original-version='18.1' source-build='2022.3.2 (20223.22.1203.1123)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='death_cause_brazil' inline='true' name='federated.0wpu5970ye6k531aset1k1ulne9d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='death_cause_brazil' name='textscan.0btzwqg1umqvwt1dk7xt0008dmgd'>
            <connection class='textscan' directory='C:/FaculdadeImpacta/Cursos/Curso DataAnalytics Vanzolini/tableau/Visualização dos dados' filename='death_cause_brazil.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0btzwqg1umqvwt1dk7xt0008dmgd' name='death_cause_brazil.csv' table='[death_cause_brazil#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='string' name='gender' ordinal='2' />
            <column datatype='string' name='age' ordinal='3' />
            <column datatype='string' name='color' ordinal='4' />
            <column datatype='string' name='cause' ordinal='5' />
            <column datatype='integer' name='total' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0btzwqg1umqvwt1dk7xt0008dmgd' name='death_cause_brazil.csv' table='[death_cause_brazil#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='string' name='gender' ordinal='2' />
            <column datatype='string' name='age' ordinal='3' />
            <column datatype='string' name='color' ordinal='4' />
            <column datatype='string' name='cause' ordinal='5' />
            <column datatype='integer' name='total' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[death_cause_brazil.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[death_cause_brazil.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_cause_brazil.csv_941FBB94FBBC4408BD21A082B208EC52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[death_cause_brazil.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_cause_brazil.csv_941FBB94FBBC4408BD21A082B208EC52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[death_cause_brazil.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_cause_brazil.csv_941FBB94FBBC4408BD21A082B208EC52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[death_cause_brazil.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_cause_brazil.csv_941FBB94FBBC4408BD21A082B208EC52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>color</remote-name>
            <remote-type>129</remote-type>
            <local-name>[color]</local-name>
            <parent-name>[death_cause_brazil.csv]</parent-name>
            <remote-alias>color</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_cause_brazil.csv_941FBB94FBBC4408BD21A082B208EC52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cause</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cause]</local-name>
            <parent-name>[death_cause_brazil.csv]</parent-name>
            <remote-alias>cause</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_cause_brazil.csv_941FBB94FBBC4408BD21A082B208EC52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total]</local-name>
            <parent-name>[death_cause_brazil.csv]</parent-name>
            <remote-alias>total</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_cause_brazil.csv_941FBB94FBBC4408BD21A082B208EC52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='death_cause_brazil.csv' datatype='table' name='[__tableau_internal_object_id__].[death_cause_brazil.csv_941FBB94FBBC4408BD21A082B208EC52]' role='measure' type='quantitative' />
      <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
      <column caption='Cause' datatype='string' name='[cause]' role='dimension' type='nominal' />
      <column caption='Color' datatype='string' name='[color]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total' datatype='integer' name='[total]' role='measure' type='quantitative' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[age]' derivation='None' name='[none:age:nk]' pivot='key' type='nominal' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <group caption='Ação (Age)' hidden='true' name='[Action (Age)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[age]' />
        </groupfilter>
      </group>
      <group caption='Ação (Cause)' hidden='true' name='[Action (Cause)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[cause]' />
        </groupfilter>
      </group>
      <group caption='Ação (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[gender]' />
        </groupfilter>
      </group>
      <group caption='Ação (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Ação (ANO(Date),MÊS(Date))' hidden='true' name='[Action (YEAR(Date),MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:date:ok]' />
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;F&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <default-sorts>
        <alphabetic-sort column='[none:age:nk]' direction='ASC' />
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='death_cause_brazil.csv' id='death_cause_brazil.csv_941FBB94FBBC4408BD21A082B208EC52'>
            <properties context=''>
              <relation connection='textscan.0btzwqg1umqvwt1dk7xt0008dmgd' name='death_cause_brazil.csv' table='[death_cause_brazil#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='string' name='gender' ordinal='2' />
                  <column datatype='string' name='age' ordinal='3' />
                  <column datatype='string' name='color' ordinal='4' />
                  <column datatype='string' name='cause' ordinal='5' />
                  <column datatype='integer' name='total' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filtro 1 (gerado)' name='[Action1_DAE4C00C9FF54EEDA311379B810B14AB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Painel 1' type='sheet' worksheet='Mapa das mortes no país' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Painel 1' />
      </command>
    </action>
    <action caption='Filtro 2 (gerado)' name='[Action2_ACA6D7C751E94D288F042B8C813D4417]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Painel 1' type='sheet' worksheet='Faixa Etaria' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Painel 1' />
      </command>
    </action>
    <action caption='Filtro 3 (gerado)' name='[Action3_C9A9E57E55704B4D8C4CAECF953823CF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Painel 1' type='sheet' worksheet='Causas de Morte' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Painel 1' />
      </command>
    </action>
    <action caption='Filtro 4 (gerado)' name='[Action4_2009C62F91DB40718A0B9D25ABFFB79E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Painel 1' type='sheet' worksheet='Cor' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Painel 1' />
      </command>
    </action>
    <action caption='Filtro 5 (gerado)' name='[Action5_69B7AA264AC9424E96DA2AAAEA31D1A6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Painel 1' type='sheet' worksheet='Genero' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Painel 1' />
      </command>
    </action>
    <action caption='Filtro 6 (gerado)' name='[Action6_19073E24E8B94447A4010DA694E2711D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Painel 1' type='sheet' worksheet='Mortes por Mês entre 2019 - 2020' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Painel 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Causas de Morte'>
      <table>
        <view>
          <datasources>
            <datasource caption='death_cause_brazil' name='federated.0wpu5970ye6k531aset1k1ulne9d' />
          </datasources>
          <datasource-dependencies datasource='federated.0wpu5970ye6k531aset1k1ulne9d'>
            <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
            <column caption='Cause' datatype='string' name='[cause]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cause]' derivation='None' name='[none:cause:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total]' derivation='Sum' name='[sum:total:qk]' pivot='key' type='quantitative' />
            <column caption='Total' datatype='integer' name='[total]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Age)]'>
            <groupfilter function='level-members' level='[age]' user:ui-action-filter='[Action2_ACA6D7C751E94D288F042B8C813D4417]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Gender)]'>
            <groupfilter function='level-members' level='[gender]' user:ui-action-filter='[Action5_69B7AA264AC9424E96DA2AAAEA31D1A6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_DAE4C00C9FF54EEDA311379B810B14AB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_19073E24E8B94447A4010DA694E2711D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[none:cause:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:cause:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:cause:nk]' member='&quot;Others&quot;' />
                <groupfilter function='member' level='[none:cause:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0wpu5970ye6k531aset1k1ulne9d].[none:cause:nk]' direction='DESC' using='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' />
          <slices>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[none:cause:nk]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Gender)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Age)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wpu5970ye6k531aset1k1ulne9d].[none:cause:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{4BD2FD70-8F31-4C75-833E-DF45D6DC57D5}' />
    </worksheet>
    <worksheet name='Cor'>
      <table>
        <view>
          <datasources>
            <datasource caption='death_cause_brazil' name='federated.0wpu5970ye6k531aset1k1ulne9d' />
          </datasources>
          <datasource-dependencies datasource='federated.0wpu5970ye6k531aset1k1ulne9d'>
            <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
            <column caption='Cause' datatype='string' name='[cause]' role='dimension' type='nominal' />
            <column caption='Color' datatype='string' name='[color]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[color]' derivation='None' name='[none:color:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total]' derivation='Sum' name='[sum:total:qk]' pivot='key' type='quantitative' />
            <column caption='Total' datatype='integer' name='[total]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Age)]'>
            <groupfilter function='level-members' level='[age]' user:ui-action-filter='[Action2_ACA6D7C751E94D288F042B8C813D4417]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Cause)]'>
            <groupfilter function='level-members' level='[cause]' user:ui-action-filter='[Action3_C9A9E57E55704B4D8C4CAECF953823CF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Gender)]'>
            <groupfilter function='level-members' level='[gender]' user:ui-action-filter='[Action5_69B7AA264AC9424E96DA2AAAEA31D1A6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_DAE4C00C9FF54EEDA311379B810B14AB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_19073E24E8B94447A4010DA694E2711D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0wpu5970ye6k531aset1k1ulne9d].[none:color:nk]' direction='DESC' using='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' />
          <slices>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Gender)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Cause)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Age)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wpu5970ye6k531aset1k1ulne9d].[none:color:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{77F68E8A-B898-45CB-88E0-0C6618D8AB17}' />
    </worksheet>
    <worksheet name='Faixa Etaria'>
      <table>
        <view>
          <datasources>
            <datasource caption='death_cause_brazil' name='federated.0wpu5970ye6k531aset1k1ulne9d' />
          </datasources>
          <datasource-dependencies datasource='federated.0wpu5970ye6k531aset1k1ulne9d'>
            <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
            <column caption='Cause' datatype='string' name='[cause]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[age]' derivation='None' name='[none:age:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total]' derivation='Sum' name='[sum:total:qk]' pivot='key' type='quantitative' />
            <column caption='Total' datatype='integer' name='[total]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Cause)]'>
            <groupfilter function='level-members' level='[cause]' user:ui-action-filter='[Action3_C9A9E57E55704B4D8C4CAECF953823CF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Gender)]'>
            <groupfilter function='level-members' level='[gender]' user:ui-action-filter='[Action5_69B7AA264AC9424E96DA2AAAEA31D1A6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_DAE4C00C9FF54EEDA311379B810B14AB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_19073E24E8B94447A4010DA694E2711D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0wpu5970ye6k531aset1k1ulne9d].[none:age:nk]' direction='DESC' using='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' />
          <slices>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Gender)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Cause)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (YEAR(Date),MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wpu5970ye6k531aset1k1ulne9d].[none:age:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{562D7501-2184-448E-878A-82414FB0014B}' />
    </worksheet>
    <worksheet name='Genero'>
      <table>
        <view>
          <datasources>
            <datasource caption='death_cause_brazil' name='federated.0wpu5970ye6k531aset1k1ulne9d' />
          </datasources>
          <datasource-dependencies datasource='federated.0wpu5970ye6k531aset1k1ulne9d'>
            <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
            <column caption='Cause' datatype='string' name='[cause]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total]' derivation='Sum' name='[sum:total:qk]' pivot='key' type='quantitative' />
            <column caption='Total' datatype='integer' name='[total]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Age)]'>
            <groupfilter function='level-members' level='[age]' user:ui-action-filter='[Action2_ACA6D7C751E94D288F042B8C813D4417]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Cause)]'>
            <groupfilter function='level-members' level='[cause]' user:ui-action-filter='[Action3_C9A9E57E55704B4D8C4CAECF953823CF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_DAE4C00C9FF54EEDA311379B810B14AB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_19073E24E8B94447A4010DA694E2711D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0wpu5970ye6k531aset1k1ulne9d].[none:gender:nk]' direction='DESC' using='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' />
          <slices>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Cause)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Age)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0wpu5970ye6k531aset1k1ulne9d].[none:gender:nk]' />
              <wedge-size column='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' />
              <size column='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' />
              <text column='[federated.0wpu5970ye6k531aset1k1ulne9d].[none:gender:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{30F1AE63-03E9-41B9-8908-4EA599026471}' />
    </worksheet>
    <worksheet name='Mapa das mortes no país'>
      <table>
        <view>
          <datasources>
            <datasource caption='death_cause_brazil' name='federated.0wpu5970ye6k531aset1k1ulne9d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wpu5970ye6k531aset1k1ulne9d'>
            <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
            <column caption='Cause' datatype='string' name='[cause]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cause]' derivation='None' name='[none:cause:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total]' derivation='Sum' name='[sum:total:qk]' pivot='key' type='quantitative' />
            <column caption='Total' datatype='integer' name='[total]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Age)]'>
            <groupfilter function='level-members' level='[age]' user:ui-action-filter='[Action2_ACA6D7C751E94D288F042B8C813D4417]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Cause)]'>
            <groupfilter function='level-members' level='[cause]' user:ui-action-filter='[Action3_C9A9E57E55704B4D8C4CAECF953823CF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Gender)]'>
            <groupfilter function='level-members' level='[gender]' user:ui-action-filter='[Action5_69B7AA264AC9424E96DA2AAAEA31D1A6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_19073E24E8B94447A4010DA694E2711D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[none:cause:nk]'>
            <groupfilter function='level-members' level='[none:cause:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[none:cause:nk]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Gender)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Cause)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Age)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wpu5970ye6k531aset1k1ulne9d].[Longitude (generated)]' field-type='quantitative' max='7095288.9398162887' min='-18938146.551247649' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wpu5970ye6k531aset1k1ulne9d].[Latitude (generated)]' field-type='quantitative' max='816905.30651289923' min='-4224490.2252262067' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' />
              <lod column='[federated.0wpu5970ye6k531aset1k1ulne9d].[none:state:nk]' />
              <geometry column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wpu5970ye6k531aset1k1ulne9d].[Latitude (generated)]</rows>
        <cols>[federated.0wpu5970ye6k531aset1k1ulne9d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C092EB0C-6416-4BE9-94FE-729025954607}' />
    </worksheet>
    <worksheet name='Mortes por Mês entre 2019 - 2020'>
      <table>
        <view>
          <datasources>
            <datasource caption='death_cause_brazil' name='federated.0wpu5970ye6k531aset1k1ulne9d' />
          </datasources>
          <datasource-dependencies datasource='federated.0wpu5970ye6k531aset1k1ulne9d'>
            <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[total]' derivation='Sum' name='[sum:total:qk]' pivot='key' type='quantitative' />
            <column caption='Total' datatype='integer' name='[total]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Age)]'>
            <groupfilter function='level-members' level='[age]' user:ui-action-filter='[Action2_ACA6D7C751E94D288F042B8C813D4417]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Gender)]'>
            <groupfilter function='level-members' level='[gender]' user:ui-action-filter='[Action5_69B7AA264AC9424E96DA2AAAEA31D1A6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_DAE4C00C9FF54EEDA311379B810B14AB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Gender)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]</column>
            <column>[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (Age)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wpu5970ye6k531aset1k1ulne9d].[yr:date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]</rows>
        <cols>([federated.0wpu5970ye6k531aset1k1ulne9d].[yr:date:ok] / [federated.0wpu5970ye6k531aset1k1ulne9d].[mn:date:ok])</cols>
      </table>
      <simple-id uuid='{4BDD4AB1-BC9C-4A08-89B6-8329892A059F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='História 1' type='storyboard'>
      <style />
      <size maxheight='700' maxwidth='1150' minheight='700' minwidth='1150' preset-index='12' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97714' id='1' param='vert' removable='false' type-v2='layout-flow' w='98608' x='696' y='1143'>
            <zone h='4714' id='3' type-v2='title' w='98608' x='696' y='1143' />
            <zone h='14429' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98608' x='696' y='5857' />
            <zone h='78571' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98608' x='696' y='20286'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Painel 1' id='1'>
                    <currentDeltas>
                      <worksheet name='Causas de Morte'>
                        <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]'>
                          <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_DAE4C00C9FF54EEDA311379B810B14AB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Cor'>
                        <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]'>
                          <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_DAE4C00C9FF54EEDA311379B810B14AB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Faixa Etaria'>
                        <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]'>
                          <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_DAE4C00C9FF54EEDA311379B810B14AB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Genero'>
                        <filter class='categorical' column='[federated.0wpu5970ye6k531aset1k1ulne9d].[Action (State)]'>
                          <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_DAE4C00C9FF54EEDA311379B810B14AB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Mapa das mortes no país'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0wpu5970ye6k531aset1k1ulne9d].[Latitude (generated)]' field-type='quantitative' max='782956.51505337749' min='-4258439.0166857289' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0wpu5970ye6k531aset1k1ulne9d].[Longitude (generated)]' field-type='quantitative' max='13336023.68883248' min='-13398650.334008731' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{7F5AD112-219B-498B-B5E5-E815B0ECDDAB}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Painel 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='34' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='32' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
              <zone h='98222' id='30' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone h='98222' id='28' type-v2='layout-basic' w='99000' x='500' y='889'>
                  <zone h='61111' id='15' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
                    <zone h='61111' id='8' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                      <zone h='61111' id='6' type-v2='layout-basic' w='99000' x='500' y='889'>
                        <zone h='22333' id='3' name='Causas de Morte' w='31588' x='500' y='39667'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='38778' id='5' name='Mapa das mortes no país' w='99000' x='500' y='889'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='22333' id='9' name='Faixa Etaria' w='32094' x='32088' y='39667'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='22333' id='10' name='Cor' w='15899' x='64182' y='39667'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='22333' id='13' name='Genero' w='19419' x='80081' y='39667'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='37111' id='22' name='Mortes por Mês entre 2019 - 2020' w='99000' x='500' y='62000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='35' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='280' h='38778' id='5' is-fixed='true' name='Mapa das mortes no país' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='193' h='22333' id='3' is-fixed='true' name='Causas de Morte' w='31588' x='500' y='39667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='193' h='22333' id='9' is-fixed='true' name='Faixa Etaria' w='32094' x='32088' y='39667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='193' h='22333' id='10' is-fixed='true' name='Cor' w='15899' x='64182' y='39667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='193' h='22333' id='13' is-fixed='true' name='Genero' w='19419' x='80081' y='39667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37111' id='22' is-fixed='true' name='Mortes por Mês entre 2019 - 2020' w='99000' x='500' y='62000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{75720D42-AD3D-41CA-99BF-B820DCA9B7B9}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Causas de Morte'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wpu5970ye6k531aset1k1ulne9d].[none:cause:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B5BE699-8755-44F1-B6D4-77F33870E0BD}' />
    </window>
    <window class='worksheet' name='Mapa das mortes no país'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wpu5970ye6k531aset1k1ulne9d].[none:cause:nk]</field>
            <field>[federated.0wpu5970ye6k531aset1k1ulne9d].[none:color:nk]</field>
            <field>[federated.0wpu5970ye6k531aset1k1ulne9d].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E42C3F43-E0B0-44E9-9E18-2EAB5F993337}' />
    </window>
    <window class='worksheet' name='Faixa Etaria'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C0A38924-2D7B-4F75-984B-D9D4825E830F}' />
    </window>
    <window class='worksheet' name='Cor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AB2E89F7-4A36-4723-9C7D-25CBBA5561A3}' />
    </window>
    <window class='worksheet' name='Genero'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0wpu5970ye6k531aset1k1ulne9d].[none:gender:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0wpu5970ye6k531aset1k1ulne9d].[sum:total:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wpu5970ye6k531aset1k1ulne9d].[none:gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54C48F5B-A9DA-4EBB-9985-0016EE5DFD6C}' />
    </window>
    <window class='worksheet' name='Mortes por Mês entre 2019 - 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0wpu5970ye6k531aset1k1ulne9d].[yr:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wpu5970ye6k531aset1k1ulne9d].[mn:date:ok]</field>
            <field>[federated.0wpu5970ye6k531aset1k1ulne9d].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C666CAD-02B0-4ADE-B300-99D8F269F21A}' />
    </window>
    <window class='dashboard' maximized='true' name='Painel 1'>
      <viewpoints>
        <viewpoint name='Causas de Morte' />
        <viewpoint name='Cor' />
        <viewpoint name='Faixa Etaria' />
        <viewpoint name='Genero'>
          <highlight>
            <color-one-way>
              <field>[federated.0wpu5970ye6k531aset1k1ulne9d].[none:gender:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Mapa das mortes no país'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Mortes por Mês entre 2019 - 2020'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{86E23107-7020-405D-86A0-BBEF9E1C8D75}' />
    </window>
    <window class='dashboard' name='História 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{00D34653-AFB0-48AC-9756-12E9EB63EEFD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Causas de Morte' width='192'>
      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
      uZdJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='144' name='Cor' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAACQCAYAAADnRuK4AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deVxUVf/H308gKgZParlhbuVuFM3ogyKjiGKKhoVmCkFKLi3mhguaqBgu
      uJbLI/ZgYlBamhIuaaEyhStIIaKoIaIIqGiCgMDMc35/3BkYNvHnpR6X+3695vVi7jn33MOd
      z5zv954593P/IYQQKCg8IE/9rzug8GijCEhBFoqAFGShCEhBFoqAFGShCEhBFoqAFGShCEhB
      FoqAFGShCEhBFoqAFGShCEhBFoqAFGShCEhBFoqAFGShCEhBFoqAFGShCEhBFoqAFGShCEhB
      FoqAFGShCEhBFoqAFGShCEhBFoqAFGShCEhBFoqAFGRhXl2F2NjYv6MfCo8o/1DMFRTkoIQw
      BVkoAlKQhSIgBVlUm0Qr/B1cQ7tyHp//EE9qbjG1rFrh8FEQi93bYA7obh5mte88vk+4SUHd
      5vR+LwB/b1usy7RxiXDvt1mpG8/2cG9alikKxcN9NcnljlrL7XOOzNExVz2F3eW71HkyEaEe
      2HCJUA93Vpvu7LqC2Pka6W/xgBRH+wv7QWvE6ZItf4iQt1RC5RUmrpRUihKzVCPFplQhROom
      MVLlL6If9ICPMwW/iZ1bTojLtwuFEEIU3j4lQryGifXJQghxQ2wbP1KsOpElCoUQxXkp4odp
      rmLaj3fKNHF79xThFRIiZo3cJFLv45Cpm8aLRceKKy27E+0vJm3JNLyLEQGjTT7TcjxwCDPv
      bMsrGYmcyTZsyDvL6Tp96HMziWSdYdu5MyRYv0KXllW1YkTLXLWauVrj27moPUK59KCde9So
      8zJuw9U0t7YAwMK6C717WZOTC5BMUr4LQ9SNsADMLVsz+L3XeSrzRun+OQdYEtmZuV4v3l9I
      0R3nm996M6pbZbWz2LWjLiPcG0tvszO42vx5bKpo6sFzoIYd6dL0N5KMQ9vZ06R0Gcprtgmc
      OWc49plEMuw606HaxjTMj43FOCo+yejyM0iMXMDihMG8pQLoxsAuP7Lxp2sUAbr8i0RuSuKl
      3sZvpY644HCaTfCizX0mJFkRX5Hz2iAaV3b8uM3s7/AmJdrKysSyTdUjgIwkuh0vvQqJZ1MA
      SD+bSJvOnWnfqQEpqXkAJCf9RudXX6ZeyT5XORLsy1Cn7qjVjviEpyANVlrmqj0IvQSXQj1Q
      T9kNyatxV6tRq+eiBdClsN13CI5qNeruTryz8jg5D975hxBpFLbXjCDonAP+QW6GPMYc1bRg
      +h8dRQ+1GvuB0zk3KAAPw2eqSwom1HIq4zrdp3p0SWyL7sK7/etVUpjD/q23eMuzXemmP29y
      eLU7asN5H/rBeo6bnvj7CJdVcmPbeKGaslvcEcUiatZbIuQPIURskBgSFCuEuCLCvJxEUGxJ
      0BUjVe+JDaeuirxiIQpPLheD7ANEjBBCiGjhb8yVhBAi2l+oysTyYhEb5CrGf50mCoUQojBZ
      hHj1rJAHPBYU3haXT/0gAsYEiOjbQghxW0QHTBRrTHKg/QFjxMKYO0KIVLHpoyARW5LKRAv/
      anKgOz/6iY+2ZVZemLxejA6KFZVnRlLfzu/3F0M/2iluGDbJugpr2LELTdee5iytOHOmC3Zt
      gLzOtPn8LOm62ySdtsOhTPxqRvsuTbEEaNAQ6+Lb6CptuTznOKrN5ETGG/RYXrq1feYNoLJv
      0iOMhTXNuwxmjmcs3pHpaHofIkT3JqHqRlK5ZWv6eTmwaWMcEM36IxEU228t08Ru9X5iY8Mr
      afwS23Za887qyoJXHtrws7h8MK7qPMrCmhf7jWZQ2GaScaMHcueB2r3EqwUppCafIbFxJ9oD
      1GtFm5tJJCedIeGFznSosc/XmqHrjhIbG1vyCveuNjt/NPg9guBfLnArX/o66fIvErkrjsbP
      PgONO9Dl3HdsTcyhCKDoGrG7DlDcrAn0mMMRk/MRG7sC1/YT2F6peEB3/Bt+6z2KynPnXeyo
      OwL3cto6vHoSobEZ5OsAXT4XI9fyXeNuvGwolycg887YvvIbSd8nkdWlIw0BaEdH2wSityeS
      p36ZNg/Sbr2nsc44x7mbOtDp0NGOrg4QsTaY+Js6QEd+RiJHkrKrbeqRoGkz6vy0kOH97VGr
      1Ti6TiO680I+6V8PzFVMDnyN00vc6KVWo3b2ZF2ON5/5tLt3m5dC8ShzJZvF9i9v8tqgSlNn
      jn+5hw5vdqsw+nTz8IYtE3B1VKO278/k6M4s/KR/6bj//w3R5Tm9ZpBQqVRiVlRp5LwS5iVU
      KpWYstskRyk/D1TmfbkcSKSKnVPdRE+VSqh6LhRHhRDi9u9i01R30dteJVQqe9Hb/X2xIfYx
      zIEeMZRf4xVkofwWpiALRUAKslAEpCALRUAKsqh2IjE/P//v6IfCI4oyAinIQhGQgiwUASnI
      QhGQgiwUAT0k6PMvcTh8GdM9XQmMKV+Yyf7AEbhoNDi7jmFtXGUrodLYOs4ZjU84aZUdIC0c
      H40Gjcmr9Dg5JG6ciKuzBo3LCGZHpKI3tBnuU3YfjUaDxnkJRw17yhBQaeOz9pe9UsvfP0s6
      UFX/jGykY1c40Y8saWybv4z4psOYN6ZHxdItc9n+nB9bD2rZu+ENMhctJarcxXHO/vUccPDG
      uapDXL1CnQ+3oNVqS16zHaSi/JjVLLnYnw17tRzc6kfLPXMJPQ/QAo8QbZl9tGHjeNW1L10N
      zcoegZz79yf2RLxBsQB64k+k4unZ3/QUEO6jwSf8r5HTo08Lhi9ZzYd9WmJZYWLlLD8eaM9Y
      H1vqm4GFzUAmjLhF1K8mCsqJZuWeDvh5vFDlvEx2VgbNmjerpCSfX3dnMGTCQGwswKy+LT5j
      Xybm4NlK6uqJ23YKR08VZoYtsgVk3rM3vU7EklCyJYHYxH/RtbNpLUnJIR4t5B7uCSSb6427
      0NGsdEsjVTfMM68Z3umJ//Jbmo73oJVZpQ0AcD3LklbPV1Zyg+vY0rlR6RazV1S0yMgyGRQM
      XNvFN7n9GGBSV34OZG5H104xnDAK9uwJjnVRY1umkknIKYpjxZAhLDkqfYNy9s/CZVw4qXpA
      n0rEbCnWa5xdGbM2rmTdsz4zmmVjXHHWaHB2ncGOLNk9fzS4W0BBvXrSKk4jT5mRfjkdAP3Z
      EL6uOwGfDvdQD/DnrWMEe0oph7OrJ1NCjOe2kLtPlWvfzBzztCukl2lBz9mdv9JppHOZujWQ
      RFui+lczjsVJ4SktLo4X7O2o8t+xUDFx8UB+X/wF8beiWbkOfJd60MpMT/waXw69soxdWi3a
      vZ/hmODH0qh84DyhUwI477iCyINaonbMo39D+T1/JKhTl7p5eZRJef6rx+Z5GyCNLf8pYKRP
      h6rPtwH7GVEleczeLQEMylxFwO5soDZ1/luufb0OXYvmZW/lyT/E1nM9GdS2bLs1cmdqQ7uu
      sCKebI96xJ9oiONCS4ivur5ZBx8WvjmWSaN+o+u0z3CxBjjPiZhrxGWOoO/q0rptM29A2nFi
      rvRhtFd7Sf1mdSvJFR5XGvJc1jHO6F1QGVRyLe44uiZD4ehqNh7fTbHT9jJ77NMcQKsNqbJF
      C6s29HnnNbZ+cx5cbXmOBE5fgw6G0KT/LY60pgPLiDJtRyRWI5bTqFxbNXMZ30LFv64eI+56
      HMf4FyrL6nfBrA51zXNJu/KnyUZrhqw8WCbrV/KmDrzWJ5kNIQnc0kNR+h5Wf1Mf556WYD+D
      KNMrJO0i+rcdR1gF8RwleEY4J7Py0SNNGez5YgeN1LaAJT1dm7Jz9R7Si0B/K4GQDb/j4GRy
      N4Q+jm2nHPFUVRznamgeqANdHZI4suEI2V3tqC665MQsxlfbg0VfTKDZN4GEp+qBtqjsYfeG
      EBJu6QE9+VlJHD+bDTYd6Gx9hJ9/uk4RevKzLnE1t2Z6/nAQQ6BxjsVvH/v8DH8b5ilavD0f
      9+uLGO6kYcDYfbSeNw3n6r6kaeH4lEyjdOUtD9g+dRguGg1OQ2YS02Ee0wyNWDpMYEbrfYwd
      oMFp+CKuuy/B2yRUXdv5Fbf6Dagw+sB9GExV/Wt8GuE+nqSONswnxH/GoIkxvL7hW8Z2AGIC
      0WxsRViIBy1M6s7sFM3iMV/Tatk6PFqZkRM9n5HBz7F40wd0uZtI+JLFfH00jdziWli1eJlh
      Uz/lXTtLcuLWMtX/e5JzzbBxdKb1+d3Um1g6l6Hwv0GGgBQUlJ8yFGSiCEhBFoqAFGShCEhB
      FsqNhQqyUEYgBVkoAlKQhSIgBVkoAlKQhSKgh55raFd+YPCVVNPdaSi+21MqOrvlHWZBfzXq
      EqvbcuQkEDzeie5qNY5DfNmeYtqCjowDi3jHqTtqdXechs7nZ4P10jXtSj4YKu2n7u7EUN/t
      lNn1wZ1hUsWmkSqhUhlfkmfPv4/dLlPu/8DG0OU9g55Q7ukhbaRYnF7jJWaFrBIjKz3hd0S0
      /1Ax7Yc0USiKRfbJNcJr2HphbKI4Nki4eq0RJ7IKhRDFIu9qirh6RwghCsRvO7eIE5dvG7wp
      b4tTIV5imMnBZY9AriuM9mrRbHYXhM4MJk5uowql3NNDWkKXspnVV72Z4fxM5W3kRRORPpSp
      g5/HAnMa2I3jw1e1/JQEkEfU1hMMnv0h6kYWgDmWTVvTtB5AHV52G466uTUW0sHp0rsX1iYH
      r8EQZsHzPexpk3OHvJprVMGEih7SAFlErDzL4Bl9yj36wIQb18HuJRNfaHNe7daKq5k64CwJ
      N1+jXzWOeejyyUiMZMHiBAaXHrzmBKTLv0jk2q+54dYfVSXl2T/P520XR8lv2NGFD0OSSoSm
      yzjAoncMcdZxCPN/Lu99mIN2wSAGzT3AzfuzdX3MqMpDGnL2LOfYgE8YWKV6gLsFPPV0WbdT
      c3NzUi+nA3nc+e8fbP9gKE7d1ajVjgzxDSXB5NYz7Vw1ansNI4LO4eAfhJupt+mDB+fyOVAv
      MXTBbnG5sGy5MSTfOH1SnDfE8eLs78XHKi8RdkUIURwrglzshVdIksgrFqI476pIuXpHlOZA
      t0V0gKtw9Y8WtyvpxRNFeQ/pO9EiwHebKHF9Tt1UeQ6UuklMWXO6zKbiqFkGX8to4T9qnfjN
      mOcU54mU76eIIYuOlfOLLhS3L58SPwSMEQHRpZ+E7JXFrisMjygoyuHCvk/xGXyahbunoSrX
      ci1dAutHTyEmNZdiANrzqg44dxSthSdLRneU1jubN6V1yWq7ZFa794GOH/Ldl5qqh+gnhXIe
      0i8QQsTB00SoF5Wppt7tSmzs/NINzz4H8afIopMhjOk4eTyVZq+bA52xbXiYwiaGPMfcktZv
      uGHrcYZ0upk89ccC6+ZdGDzHk1jvSNI1HthQkzmQhTUvDh6EffYRYlPKF8YRPCmU2j5biTb6
      Gd9Xo+2Z8O23THhqI/PCK7l0fRK4h4e0jUdoGd/s2O0TaO+6oqx4AOr1ws1mG8sjL1OEjpvx
      waw9qaFfJ4CG9HO6ycqVv3BNehgHF3dEkKrpTkt+JyL4Fy7cypfOvS6fi5G7iGv8LMZ0vQaT
      6CKu/RTF0Vo2NKmwKLqQuwX1aNjkGSx0+Vz85QgXjEXt7NEUhbFk4xnydVKieDHDJA03a4N3
      0CQs189hc8oTKKF7eUjfC+1ckzmhemimzuGF3V70UtvjNj+L4Z/5YMybrQd+gl+jCMY6q1E7
      ujItpgdzfdoBTWlW5ycWDu+PvdpQVnM+0eVzIJXo2W+UWBGTbYidpjlQsfgjbJzoba8S9r09
      xZwtq8THJnM8xVejxELP3sJepRKqnm5i3k83RPl5oNvR/sLFxV9EP/GJ0MOFspxDQRbKTxkK
      slAEpCALRUAKslAEpCALxSdaQRbKCKQgC0VACrJQBKQgiyfGpulRRp9/iWM7vmPn3oP88/3d
      ZR1J9JnsXzyZZfvS0Vu1582A5Xyoquxn5xwSw5cQGPoL6XfrUL+zF8v+7UnbtHB8PIM5X652
      LdcgombYcz1mLYv+vYff03IprmVFC/uxfBrgVuLHKENAkmVLcLkjtx0XpphC1SiSBfCN/r7M
      G1PIyvKlJRbAttTL3MOCiUuJ2ryggn/QtQh/5p11YfnOAFpa6slNuc5dgBYehGg9yrYZPolt
      HboCd8n8swmeS7aw2MYKi6Jckrb4Mje0E6GjJQMh2SNQ/0U159GTFu6DZ+potDVm+hNDoMYP
      arCPfz+SBTAAFXyxDRbAGyQLYGwGMmHEHlb9mo+zi6mCzrPreyve//dAWkoegVi1scGqssMZ
      3cg8zAAzXnJ1Ly2zsKKTxgGriDslmx7zHMiB2dpHWTzVUZ0FsLFaEglt+tL7PqwHr+36htzK
      3Mj0+WQl7WHJ8tMMeMOuZPNfJqDzYe/j7upcYisbGHXdUJJD3Noxkq2+xhlXz0UcyoaYQA2e
      wedhn18VLvfZHFr0Lm4ukv2bi9sUNp81zFGZ2gNrXHB7P8wQ02MI1Phg9DfPPrSId91cpPZd
      3Jiy+azBnVSyIZ6+LpzZnpKVsMuoYOIf9imwaiyAS8i7g0VeHIvedyu1UF4WTWZ5I2j9WXb+
      2omR5eJfTKAGjdNrvLvqAvYzF+BqkqHIDmH7/DTsM3kvhbS71H5lAuvebE9jSzOKElbjOXkj
      R51nYH9+G8ujbVm09wtsLYrITTlLOtBhtpawVvcOYU1c/Qmb2gYrCz23Iv1wWxlJ3+DhNDgU
      wvLikUQcHEx98sn6PYXCyhvAP2wqbaws0N+KxM9tJZF9gxluMHAvqGvH1A1vE2h+mtWeH7En
      fhx2D/PoZWIBXPKRl1gAl6NuJ0bOGo/fM5aYFV3n5H9m8unOjqxxLx1r8g9t5VzP9xlbbleH
      2Vq0s4vITb/AL2FTWdIzkBkOUqL+F+VAtbDI3sO82ZM4feuusabkfG7Tkheyl7Bo5i369nSh
      u+OrdLovz+da6E6F8L7fUdJypUWxtH0ZHVCnRWuax61n+pxL9HZ0oGcvW1pW1oLuFCHv+3E0
      zbisti0vm6xRa9KuE40tAZ6hgRVU9kiTh4t7WACb0qITNoUpPP2MpWTda/Ecrw7qw9qvzkNJ
      sEpjR6QVI5ZXZqUJYIGVTScGznib+HF7ueownGb8VSEsexeL55yhW9BODhoe0FFi+mnpzLzI
      L5je7wUKYkOY5jGStfEVTPUrEv8lM7+xwHvTXsnSdpHJszjajmbTlqX4qOvyx09BjBkyg93X
      KjTAlzO/wcJ7E3uNlrg189/+D7mHBXAZbOnf5gBB25PJ1wNF1zm5S0sz+9JcRh+3jVOOnpR1
      8j3F7o2HSflTsgdGn8+lPT8S36h0SetfMw9UeJcCGvJso9qYFV0n6dhpsoyLIM/HsK/4RXq7
      eGDnMpCWfm7sOpcFds2o97QVpJzjQpEDL5rp0ZuZlZpdF96lwLIBjf9pIc2LHE8BWgGQHb+f
      5H92R/1mJ+wHdWW152QSU8C1zJepkLsFljRo/E8s9PlcOnac0hYeZqQrydI0YZ/0d/9FaGc7
      SBbAiycz3CkdvZUdHksMl/AxgWgO9TakA2Z08JnD4JVzGOaSTK5ZfTq7+bOkJNe5xs6vbtFv
      YfnRpwlNakew1HueFElqWdHCfiTzZpQ+7qDGcyBpHmgAXq/vZL6bE6tt1LgNaEpDiqQKtQs4
      uWIsq07f4i51qN95OP4DpCSkYT9vPHZ9wri+X8JLE/lqrTslz5fpOpyxTT9kct+d1GnvxGi7
      0rhXl6ts83+bOSWTXR/zaVfK0ZXhY5vy4eS+7KzTHqfR1ftZPxwYriSrKjZrgsvsb3ApX8Fh
      NlqHsvV6+X5BL9/KGmmE+6oFlWx/DpXHJ6g8KikyoNj8KsjiMZ8HUvirUQSkIAtFQAqyUASk
      IAvlvjAFWSgjkIIsFAEpyEIRkIIsFAEpyEIR0CPNfVoAoyNlu6+hXkULu5zjKxnt4ihZ/L6z
      iAMZxhbySNrubyiTrAlHrzxedpWCHGuPaH+VUD24j+9fT+omMVLlLx7iHsrjviyAJRvft6f9
      IFLyioUQhSJLu0gMnfajuCOEEJnbxEejTSx+k8LEeC+jBfAV8VPYfnH+Zp4oFpL94H5/VzHt
      xzslbSsj0KPMfVgAA6QnZuP03mBaW5oDFjRy9GVC3Sii84DkBOq9PabU4rejBzP7nDNYANvQ
      16MfL9a3xBwwt2yKU6+Xyb1zt6RtRUCPCZVbAEs82+S//BD+k2RhBxTlZPJfi1tcvAQ0aUZK
      WBhnSiz0blH8VA4pqeXMmotyuPBLML5bnuW910rXMdTgeiAdGQeWMn3BD5zJBatWdrT9R1M8
      v5uDBi1z1Wux+OAV/tiyh4SbOpr0nMnaVZJdbc7xlUz65HsSbhZQt3lv3gvwx9vWGsneNpg2
      3y7g6c8/Ztn1YWwJ98YmZTszp6zi0JUCall15K0la5nczbpiH5o35B+Vmg4/TmiZq57Cbp6m
      0wh/Fgb1oXm5GvX6f4J/0iQ8nf24WVALq1Z22D+XicUNQOPD4tdnMt3VkdTcYuo2sMXp5UIy
      u9wA6gGXCPVwZ3UyNHacTtAyHzqbuuvJCcFlcqDk9eINey+x5qRkcVecHCzeKsk/ooW/apCY
      vfe8uF1otPk12NdlbhPj7UeKVSezRbEoFtlR/sLFfpqQwqy0n9foMSJIm2WwoY0VQa7jxddp
      hrifHCK8ehrqG/oQkiTF7MKktSZ9eMwpbwFcDTEBXlU+RuJKmFfFR1QU54mb57Vi/cSJYtMf
      pQbANRbCLh3RktbHm3F2DaR4Wbt2ueHNmrYdX8TaAswbNCxZEpkXd5gTPTx4z64B5pjToM9o
      RrY5wOGS5yXk0dxjGdMcG0k2tOeOos08wfI3eqBWq+kxch2nC9LJvGHog4sPoztKMdvCst6T
      c+ttiQWwjpDI9HvX1R1He7IjHStZew9Z/HqwFp3al9tsbkn9Fx0ZN9mOA+HHSzbXbA5kbv4X
      fGBNafdCuVt1rYey7qiJvW1sON6VraJ/3LmHBXAZCi5x7kKOtCa06DKRswI4M3QE3cwBskk5
      k0G+DtDdJH7tdL5qOZpBjYH0nwmPTORKjjF5ukbsrgMUNHq2pOkaE5BNx5ew/iWCHZeLgCKu
      XbxyX3c11FP1oOvhcP4TfxMdOm4e2MjXKX3oUVXq0q4rDkSwNjheeuyBLp+MxCMkZRv7sI+9
      14qk7ffZh0eWe1gAXwr1wCP0klSv7l1iFg7FWa1G7ezDjqb+rPYo/calfDsBV0c1akd3Ai++
      zud+PaQV7M+8QP0L65jk1kuaB3L2ZF2ON5/5lD5Yo8YGDPNuH7B48IfMeKsHgebN6e3yAvB0
      9Ts2dmfJZ2lMmuGGvTGJDvanShtk8258sGo8AQFTcP1SWgPdym4kfku7l/bBrQdz/j99eFRp
      1BXvgK54V1Jk7R1OeMm79ozauJ9RlTbSkL5zt9F3biVF9VozcPI6Bk6uugs1t5wjL4OLt+ph
      09xaMhP/biojo3qz8z/DTZ4So/C4UXMpy93TbJ4UyI+puRRTC6uOrxMY5K6I5zFHWVCmIAtl
      JlpBFoqAFGSh2PwqyEIZgRRkoQhIQRaKgBRkoQhIQRZPzI/VTzpVek1X4xNN0QW2z5/HxqNp
      5GJF+wHTWTC5F00Mxk2yRqCYQA2awAres/ezZxnzS4W/GslrOr7pMOaN6VG2qIUHIVqt5Ppm
      eIWNexXXvpLBUvy/5xBnH8h3+7Vo927ifeuvmRFaKreHIIRJDqk+ipr+QiSv6Q/7tMSyuphj
      9IlWmQFXOZfUBdfBLbE0Q/JWfHc4LTNK/QMfAgG1wCNEq7jbPySU9YluhtPAW3y92cRbcdM+
      rJ3/Cp/otHB8NNNZFz4bT1dnNBoXRgXHY5yGzEkMZ/YIyaPZZcQaTpTuSLiPhtJImENi+GxG
      uBg9n6fwga/RM9rUY9qFEbMjSDX4c8YEavBeupllBi9k56Ez2G0c1PSpRMz2lPYr55EcE2h6
      7LLv9akRJX3WuLjxflj5TOExoxKf6EZuC5laex3uTho0fcfzbZNxfGxfWl7DI1ABde0+ZsMP
      Ufy8ZjB54XuIB8iPYunE77AcE87PWi17Q0ZjW0UL+VFLmfjdU7zz5c9otfv5btjTJN6Syq5F
      +PN50RjC9mvRHtzKeMsvmWUSjwsKmvJm0HfsPxjBpDZH+P6XNEBP/JpJfCGGs2GvFu3ez3A8
      H8CU0OrEcJdDIcspHrmVg1otB3duYMwrteWfoocYySd6UKmjLnpSw+fwldUUth/Uov15PW/l
      BjNna2m6UcMCakK7To2xNAOLZxqUPosh/ijRrYbxTp/nsADMLC2p6qOIPxpN8zd9GGhjuNep
      trFmPr8dO8nFHb64OWnQOLkxZ99NrpjEY6sX2tPGygLM6tPgn8at5zkRY8HrXoOxsQAsXsTL
      qw9XYo5z76yrDi1aNydu/XTmrAlnf/JdOnR8nMOswSd6kKlT6wm2am0ZNdAkB/J4Hev9v5Sc
      u4cgB6qIuVnV3bKduK3MFUPNPZilIm1Hb2LLUh/Udf/gp6AxDJmxmwr2048JlftEt6GD1c/s
      iMmSciCjT3SzJhhXRf89AmrbAdvzB4hKzkdPEbkpl8mssqot5w/sIuGWXurwZWNNS15R2ZLw
      1Wr2pEuLvItyUzgcV93VW1u6OhTxw+ZI0ouAogts3nyA5g7dMI4nGekZ6CnietIeDiUa98sm
      fn8suc+/yps+/iz2G8wz8YmkyDkP/zNiCNRIzxjR+O1jn5/h75Lkz+ATPaC8T3Qj3Pw/4unt
      kxjipEHjMozZMR2YN60GfaLvi0ZD8J16Er8Jr/Gl3or2A3pQp8qqvkw96Yev2xb0Vu0Z0KOO
      SdknLLg4nxWj+rL4LtSp3xnNBD96VNGWhBl2H61ijP8njB2w1DAZ5s8KbynSv9T7ddbMH47T
      f+rT2WUivdrCHwDUhavb8H97Dmm5xdSyaoH9x59SwX76kaAar+kqfaIBaxU+K77Bp4o9Hz6f
      6OvppNSqT0vDQ0EOr53IQjGViCkqzKrfW+Fv5uH7KePPgyz13Wx4SEsdbBy9WWd7KKYAAAAM
      SURBVDxDEc/Dyv8Bx0/SLZhKIewAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Faixa Etaria' width='144'>
      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
      ukQOWjxxiYAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='164' name='Genero' width='164'>
      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
      QTJS/gdWCj6Jyu1C2gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='História 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAE80lEQVR4nO3czU8cZQDH8d/ssuyyrrDQV14CgXDCiClaTYumeqhNND2YwEVNe6xNelL/
      C6/WGI2aNHo2qYmpb2mtTQluq4iULlRe2gophUJsC4XdncWDBruYQtJD9/D7fm6zeWaeZzb7
      TWYy2QlWV1dXBZiKlHsBQDkRAKwRAKyVBDA7dVULiyuSpPE/slopFDU6cllhsfQ2oZDPqXDf
      Z3PXR3U2c0mlo0Jls6MPnLhYLCibzf7v2MCjVBLAyIWfNDm3KEk68+1Xur1cVHV1jYKgdKeB
      Myc1eO2v/w6SrNPerg6VDgtUU1P9gGnz+vKLz/XBJyeUDwkA5VNRuhnq9KmTulKb1PD4tA5K
      +v67U+rp7dVHx99XGI1r74sH9MPpH3Xn/JjuvPKq8lO/aWBsRqvRhI4ePaITH76nIKjS/p5D
      OvfN13rz9R599vGnWri7qKdeOKgD3Z2SKvTaG4d0a/F4Oc4ZWBNZv/nkrt3q7u5W0446SVIY
      FhQEUVVVxVUsRpXesk0vv7RPvYePaF9Xm67cLOjdd97W/s4G/T4xo7tLeR1+65jaG2oVhgVJ
      gepq04pFAw1lR/6dJ1Akwu0Hym/drzDQ1h31amxsVPVjibVPw0JB7R279PzTbTrbN6BkIq5f
      M/2avrWoyL1Z9WUu6tzAqBq31ahu+04lK6Nr+05dzuj6clLPdXUqFv1numJ+RcNDg5q5Oauh
      S8O6lys8kpMF1gvufxA2N31NFemdSicrNTk2qvqWdt3486qamls0nh3UjYWcntndpXi0qIv9
      /dre2qH6dKUymV/U1P6Emuu3aHJyUq2trZKkiYkJtTQ3aeDCz0ptbVBFrFJtzY0KV5Z0vq9P
      uVBSJKZn9+zR44lYub4DGAt4EgxnXIjDGgHAGgHAGgHAWsXmQ+Bufn5euVyu3MvYUDqdViKR
      2HzgOgSATS0tLWl5ebncy9hQKpV6qP24BII1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1
      AoA1AoA1AoA1AoA1AoA1AoA1AoA1/hGGTaVSKcXj8XIvY0Ox2MO9WI0XY8Eal0CwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw9jdbLfFfTANDVAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Mapa das mortes no país' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mortes por Mês entre 2019 - 2020' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Painel 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
