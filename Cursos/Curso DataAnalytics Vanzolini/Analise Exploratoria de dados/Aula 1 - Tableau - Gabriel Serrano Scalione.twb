<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Vendas_Reais (Vendas - Planejada e real)' inline='true' name='federated.0bg83yw0v6ex55137e05l0d29o0d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vendas - Planejada e real' name='excel-direct.1acwwbv0om2vu81a97vrb18hys22'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/FaculdadeImpacta/Cursos/Curso DataAnalytics Vanzolini/Vendas - Planejada e real.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='União de linhas' type='union'>
          <columns header='yes'>
            <column datatype='date' name='Data da compra' />
            <column datatype='string' name='Segmento' />
            <column datatype='string' name='Categoria' />
            <column datatype='integer' name='Vendas Plan R$' />
            <column datatype='integer' name='Custos Plan R$' />
            <column datatype='integer' name='Descont R$' />
            <column datatype='integer' name='ID da fila' />
            <column datatype='string' name='ID da compra' />
            <column datatype='date' name='Data de envio' />
            <column datatype='string' name='Modo de envio' />
            <column datatype='string' name='ID do cliente' />
            <column datatype='string' name='Nome do cliente' />
            <column datatype='string' name='Cidade' />
            <column datatype='string' name='Estado' />
            <column datatype='string' name='País' />
            <column datatype='string' name='Região' />
            <column datatype='string' name='ID do produto' />
            <column datatype='string' name='Sub-categoria' />
            <column datatype='string' name='Nome do produto' />
            <column datatype='string' name='Moeda' />
            <column datatype='real' name='Vendas' />
            <column datatype='integer' name='Quantidade' />
            <column datatype='real' name='Desconto' />
            <column datatype='real' name='Custo' />
            <column datatype='string' name='Sheet' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='excel-direct.1acwwbv0om2vu81a97vrb18hys22' name='Plano_Vendas' table='[Plano_Vendas$]' type='table'>
            <columns gridOrigin='A1:G109:no:A1:G109:0' header='yes' outcome='6'>
              <column datatype='date' name='Data da compra' ordinal='0' />
              <column datatype='string' name='Segmento' ordinal='1' />
              <column datatype='string' name='Categoria' ordinal='2' />
              <column datatype='string' name='Moeda' ordinal='3' />
              <column datatype='integer' name='Vendas Plan R$' ordinal='4' />
              <column datatype='integer' name='Custos Plan R$' ordinal='5' />
              <column datatype='integer' name='Descont R$' ordinal='6' />
            </columns>
          </relation>
          <relation connection='excel-direct.1acwwbv0om2vu81a97vrb18hys22' name='Vendas_Reais' table='[Vendas_Reais$]' type='table'>
            <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='ID da fila' ordinal='0' />
              <column datatype='string' name='ID da compra' ordinal='1' />
              <column datatype='date' name='Data da compra' ordinal='2' />
              <column datatype='date' name='Data de envio' ordinal='3' />
              <column datatype='string' name='Modo de envio' ordinal='4' />
              <column datatype='string' name='ID do cliente' ordinal='5' />
              <column datatype='string' name='Nome do cliente' ordinal='6' />
              <column datatype='string' name='Segmento' ordinal='7' />
              <column datatype='string' name='Cidade' ordinal='8' />
              <column datatype='string' name='Estado' ordinal='9' />
              <column datatype='string' name='País' ordinal='10' />
              <column datatype='string' name='Região' ordinal='11' />
              <column datatype='string' name='ID do produto' ordinal='12' />
              <column datatype='string' name='Categoria' ordinal='13' />
              <column datatype='string' name='Sub-categoria' ordinal='14' />
              <column datatype='string' name='Nome do produto' ordinal='15' />
              <column datatype='string' name='Moeda' ordinal='16' />
              <column datatype='real' name='Vendas' ordinal='17' />
              <column datatype='integer' name='Quantidade' ordinal='18' />
              <column datatype='real' name='Desconto' ordinal='19' />
              <column datatype='real' name='Custo' ordinal='20' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='União de linhas' type='union'>
          <columns header='yes'>
            <column datatype='date' name='Data da compra' />
            <column datatype='string' name='Segmento' />
            <column datatype='string' name='Categoria' />
            <column datatype='integer' name='Vendas Plan R$' />
            <column datatype='integer' name='Custos Plan R$' />
            <column datatype='integer' name='Descont R$' />
            <column datatype='integer' name='ID da fila' />
            <column datatype='string' name='ID da compra' />
            <column datatype='date' name='Data de envio' />
            <column datatype='string' name='Modo de envio' />
            <column datatype='string' name='ID do cliente' />
            <column datatype='string' name='Nome do cliente' />
            <column datatype='string' name='Cidade' />
            <column datatype='string' name='Estado' />
            <column datatype='string' name='País' />
            <column datatype='string' name='Região' />
            <column datatype='string' name='ID do produto' />
            <column datatype='string' name='Sub-categoria' />
            <column datatype='string' name='Nome do produto' />
            <column datatype='string' name='Moeda' />
            <column datatype='real' name='Vendas' />
            <column datatype='integer' name='Quantidade' />
            <column datatype='real' name='Desconto' />
            <column datatype='real' name='Custo' />
            <column datatype='string' name='Sheet' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='excel-direct.1acwwbv0om2vu81a97vrb18hys22' name='Plano_Vendas' table='[Plano_Vendas$]' type='table'>
            <columns gridOrigin='A1:G109:no:A1:G109:0' header='yes' outcome='6'>
              <column datatype='date' name='Data da compra' ordinal='0' />
              <column datatype='string' name='Segmento' ordinal='1' />
              <column datatype='string' name='Categoria' ordinal='2' />
              <column datatype='string' name='Moeda' ordinal='3' />
              <column datatype='integer' name='Vendas Plan R$' ordinal='4' />
              <column datatype='integer' name='Custos Plan R$' ordinal='5' />
              <column datatype='integer' name='Descont R$' ordinal='6' />
            </columns>
          </relation>
          <relation connection='excel-direct.1acwwbv0om2vu81a97vrb18hys22' name='Vendas_Reais' table='[Vendas_Reais$]' type='table'>
            <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='ID da fila' ordinal='0' />
              <column datatype='string' name='ID da compra' ordinal='1' />
              <column datatype='date' name='Data da compra' ordinal='2' />
              <column datatype='date' name='Data de envio' ordinal='3' />
              <column datatype='string' name='Modo de envio' ordinal='4' />
              <column datatype='string' name='ID do cliente' ordinal='5' />
              <column datatype='string' name='Nome do cliente' ordinal='6' />
              <column datatype='string' name='Segmento' ordinal='7' />
              <column datatype='string' name='Cidade' ordinal='8' />
              <column datatype='string' name='Estado' ordinal='9' />
              <column datatype='string' name='País' ordinal='10' />
              <column datatype='string' name='Região' ordinal='11' />
              <column datatype='string' name='ID do produto' ordinal='12' />
              <column datatype='string' name='Categoria' ordinal='13' />
              <column datatype='string' name='Sub-categoria' ordinal='14' />
              <column datatype='string' name='Nome do produto' ordinal='15' />
              <column datatype='string' name='Moeda' ordinal='16' />
              <column datatype='real' name='Vendas' ordinal='17' />
              <column datatype='integer' name='Quantidade' ordinal='18' />
              <column datatype='real' name='Desconto' ordinal='19' />
              <column datatype='real' name='Custo' ordinal='20' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data da compra</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Data da compra]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Data da compra</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segmento</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segmento]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Segmento</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Categoria</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Categoria]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Categoria</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Moeda</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Moeda]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Moeda</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vendas Plan R$</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vendas Plan R$]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Vendas Plan R$</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Custos Plan R$</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Custos Plan R$]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Custos Plan R$</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Descont R$</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Descont R$]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Descont R$</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID da fila</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID da fila]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>ID da fila</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID da compra</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ID da compra]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>ID da compra</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data de envio</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Data de envio]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Data de envio</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Modo de envio</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Modo de envio]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Modo de envio</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID do cliente</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ID do cliente]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>ID do cliente</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nome do cliente</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Nome do cliente]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Nome do cliente</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cidade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Cidade]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Cidade</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estado</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Estado]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Estado</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>País</remote-name>
            <remote-type>129</remote-type>
            <local-name>[País]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>País</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Região</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Região]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Região</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID do produto</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ID do produto]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>ID do produto</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-categoria</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-categoria]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Sub-categoria</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nome do produto</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Nome do produto]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Nome do produto</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vendas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vendas]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Vendas</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantidade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantidade]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Quantidade</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Desconto</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Desconto]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Desconto</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Custo</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Custo]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Custo</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[União de linhas]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7693A92F48CE4E7383D3755E39208705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Descontos Reais' datatype='real' name='[Calculation_1176283938683097088]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Desconto]*[Vendas]' />
      </column>
      <column caption='Desconto em %' datatype='real' name='[Calculation_1176283938687021057]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1176283938683097088])/SUM([Vendas])' />
      </column>
      <column caption='MC Real' datatype='real' name='[Calculation_1277896407046963200]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Vendas])-SUM([Custo])' />
      </column>
      <column caption='Receita de Venda' datatype='real' name='[Calculation_1277896407054856197]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Vendas]*[Quantidade]' />
      </column>
      <column datatype='string' name='[Cidade]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='MC Planejado' datatype='integer' name='[MC Real (cópia)_1161647244032258048]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Vendas Plan R$])-SUM([Custos Plan R$])' />
      </column>
      <column datatype='string' name='[Nome do produto]' role='dimension' type='nominal' />
      <column datatype='string' name='[País]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='%null%' value='&quot;Brasil&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Quantidade]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Vendas Plan R$]' role='measure' type='quantitative' />
      <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='União de linhas' datatype='table' name='[__tableau_internal_object_id__].[_7693A92F48CE4E7383D3755E39208705]' role='measure' type='quantitative' />
      <column-instance column='[Quantidade]' derivation='Sum' name='[sum:Quantidade:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vendas Plan R$]' derivation='Sum' name='[sum:Vendas Plan R$:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Data da compra]' derivation='Year-Trunc' name='[tyr:Data da compra:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1277896407046963200]' derivation='User' name='[usr:Calculation_1277896407046963200:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MC Real (cópia)_1161647244032258048]' derivation='User' name='[usr:MC Real (cópia)_1161647244032258048:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
      <group caption='Ação (Nome do produto)' hidden='true' name='[Action (Nome do produto)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Nome do produto]' />
        </groupfilter>
      </group>
      <group caption='Ação (ANO(Data da compra),Nome do produto)' hidden='true' name='[Action (YEAR(Data da compra),Nome do produto)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Data da compra:ok]' />
          <groupfilter function='level-members' level='[Nome do produto]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Categoria, Sub-categoria' />
        <drill-path name='Estado, Cidade'>
          <field>[Estado]</field>
          <field>[Cidade]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Data da compra:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2019</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2018</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2017</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2016</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Data da compra:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>#2016-01-01 00:00:00#</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>#2019-01-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2018-01-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2017-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[__tableau_internal_object_id__].[cnt:Vendas!Reais_D976C70CB7834B3CA9D6BE24D2219829:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[__tableau_internal_object_id__].[cum:cnt:Vendas!Reais_D976C70CB7834B3CA9D6BE24D2219829:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[usr:MC Real (cópia)_1161647244032258048:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Quantidade:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[cum:cnt:Vendas!Reais_D976C70CB7834B3CA9D6BE24D2219829:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas Plan R$:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[usr:Calculation_1277896407046963200:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Data da compra' />
        <field-sort-custom-order field='Segmento' />
        <field-sort-custom-order field='Categoria' />
        <field-sort-custom-order field='Moeda' />
        <field-sort-custom-order field='Vendas Plan R$' />
        <field-sort-custom-order field='Custos Plan R$' />
        <field-sort-custom-order field='Calculation_1277896407048871937' />
        <field-sort-custom-order field='Descont R$' />
        <field-sort-custom-order field='ID da fila' />
        <field-sort-custom-order field='ID da compra' />
        <field-sort-custom-order field='Data de envio' />
        <field-sort-custom-order field='Modo de envio' />
        <field-sort-custom-order field='ID do cliente' />
        <field-sort-custom-order field='Nome do cliente' />
        <field-sort-custom-order field='Cidade' />
        <field-sort-custom-order field='Estado' />
        <field-sort-custom-order field='País' />
        <field-sort-custom-order field='Região' />
        <field-sort-custom-order field='ID do produto' />
        <field-sort-custom-order field='Sub-categoria' />
        <field-sort-custom-order field='Nome do produto' />
        <field-sort-custom-order field='Vendas' />
        <field-sort-custom-order field='Calculation_1277896407054856197' />
        <field-sort-custom-order field='Calculation_1277896407046963200' />
        <field-sort-custom-order field='MC Real (cópia)_1161647244032258048' />
        <field-sort-custom-order field='Calculation_1277896407050866692' />
        <field-sort-custom-order field='Calculation_1277896407049064450' />
        <field-sort-custom-order field='Quantidade' />
        <field-sort-custom-order field='Desconto' />
        <field-sort-custom-order field='Custo' />
        <field-sort-custom-order field='Sheet' />
        <field-sort-custom-order field='Table Name' />
        <field-sort-custom-order field='Calculation_1176283938683097088' />
        <field-sort-custom-order field='Calculation_1176283938687021057' />
        <field-sort-custom-order field='Data da compra (Plano!Vendas)' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='União de linhas' id='_7693A92F48CE4E7383D3755E39208705'>
            <properties context=''>
              <relation all='true' name='União de linhas' type='union'>
                <columns header='yes'>
                  <column datatype='date' name='Data da compra' />
                  <column datatype='string' name='Segmento' />
                  <column datatype='string' name='Categoria' />
                  <column datatype='integer' name='Vendas Plan R$' />
                  <column datatype='integer' name='Custos Plan R$' />
                  <column datatype='integer' name='Descont R$' />
                  <column datatype='integer' name='ID da fila' />
                  <column datatype='string' name='ID da compra' />
                  <column datatype='date' name='Data de envio' />
                  <column datatype='string' name='Modo de envio' />
                  <column datatype='string' name='ID do cliente' />
                  <column datatype='string' name='Nome do cliente' />
                  <column datatype='string' name='Cidade' />
                  <column datatype='string' name='Estado' />
                  <column datatype='string' name='País' />
                  <column datatype='string' name='Região' />
                  <column datatype='string' name='ID do produto' />
                  <column datatype='string' name='Sub-categoria' />
                  <column datatype='string' name='Nome do produto' />
                  <column datatype='string' name='Moeda' />
                  <column datatype='real' name='Vendas' />
                  <column datatype='integer' name='Quantidade' />
                  <column datatype='real' name='Desconto' />
                  <column datatype='real' name='Custo' />
                  <column datatype='string' name='Sheet' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='excel-direct.1acwwbv0om2vu81a97vrb18hys22' name='Plano_Vendas' table='[Plano_Vendas$]' type='table'>
                  <columns gridOrigin='A1:G109:no:A1:G109:0' header='yes' outcome='6'>
                    <column datatype='date' name='Data da compra' ordinal='0' />
                    <column datatype='string' name='Segmento' ordinal='1' />
                    <column datatype='string' name='Categoria' ordinal='2' />
                    <column datatype='string' name='Moeda' ordinal='3' />
                    <column datatype='integer' name='Vendas Plan R$' ordinal='4' />
                    <column datatype='integer' name='Custos Plan R$' ordinal='5' />
                    <column datatype='integer' name='Descont R$' ordinal='6' />
                  </columns>
                </relation>
                <relation connection='excel-direct.1acwwbv0om2vu81a97vrb18hys22' name='Vendas_Reais' table='[Vendas_Reais$]' type='table'>
                  <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
                    <column datatype='integer' name='ID da fila' ordinal='0' />
                    <column datatype='string' name='ID da compra' ordinal='1' />
                    <column datatype='date' name='Data da compra' ordinal='2' />
                    <column datatype='date' name='Data de envio' ordinal='3' />
                    <column datatype='string' name='Modo de envio' ordinal='4' />
                    <column datatype='string' name='ID do cliente' ordinal='5' />
                    <column datatype='string' name='Nome do cliente' ordinal='6' />
                    <column datatype='string' name='Segmento' ordinal='7' />
                    <column datatype='string' name='Cidade' ordinal='8' />
                    <column datatype='string' name='Estado' ordinal='9' />
                    <column datatype='string' name='País' ordinal='10' />
                    <column datatype='string' name='Região' ordinal='11' />
                    <column datatype='string' name='ID do produto' ordinal='12' />
                    <column datatype='string' name='Categoria' ordinal='13' />
                    <column datatype='string' name='Sub-categoria' ordinal='14' />
                    <column datatype='string' name='Nome do produto' ordinal='15' />
                    <column datatype='string' name='Moeda' ordinal='16' />
                    <column datatype='real' name='Vendas' ordinal='17' />
                    <column datatype='integer' name='Quantidade' ordinal='18' />
                    <column datatype='real' name='Desconto' ordinal='19' />
                    <column datatype='real' name='Custo' ordinal='20' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='10 produtos com maior venda'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#00445f' fontname='Calibri' fontsize='18'>Top 10 produtos com maior venda</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Vendas_Reais (Vendas - Planejada e real)' name='federated.0bg83yw0v6ex55137e05l0d29o0d' />
          </datasources>
          <datasource-dependencies datasource='federated.0bg83yw0v6ex55137e05l0d29o0d'>
            <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Moeda]' role='dimension' type='nominal' />
            <column datatype='string' name='[Nome do produto]' role='dimension' type='nominal' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Moeda]' derivation='None' name='[none:Moeda:nk]' pivot='key' type='nominal' />
            <column-instance column='[Nome do produto]' derivation='None' name='[none:Nome do produto:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]'>
            <groupfilter function='member' level='[none:Moeda:nk]' member='&quot;R$&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Nome do produto:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Vendas])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Nome do produto:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]'>
            <groupfilter function='member' level='[yr:Data da compra:ok]' member='2019' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Nome do produto:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]' member-value='2019' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]</column>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Nome do produto:nk]</column>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Nome do produto:nk]</rows>
        <cols>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</cols>
      </table>
      <simple-id uuid='{4CCCEAE1-5C99-4A61-A2D4-0AE1812CFC47}' />
    </worksheet>
    <worksheet name='Descontos por Categoria'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#00445f' fontname='Calibri' fontsize='18'>Total de Descontos por Categoria/Subcategoria</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Vendas_Reais (Vendas - Planejada e real)' name='federated.0bg83yw0v6ex55137e05l0d29o0d' />
          </datasources>
          <datasource-dependencies datasource='federated.0bg83yw0v6ex55137e05l0d29o0d'>
            <column caption='Descontos Reais' datatype='real' name='[Calculation_1176283938683097088]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Desconto]*[Vendas]' />
            </column>
            <column caption='Desconto em %' datatype='real' name='[Calculation_1176283938687021057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1176283938683097088])/SUM([Vendas])' />
            </column>
            <column datatype='string' name='[Categoria]' role='dimension' type='nominal' />
            <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Desconto]' role='measure' type='quantitative' />
            <column datatype='string' name='[Moeda]' role='dimension' type='nominal' />
            <column datatype='string' name='[Nome do produto]' role='dimension' type='nominal' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Categoria]' derivation='None' name='[none:Categoria:nk]' pivot='key' type='nominal' />
            <column-instance column='[Moeda]' derivation='None' name='[none:Moeda:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1176283938683097088]' derivation='Sum' name='[sum:Calculation_1176283938683097088:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1176283938687021057]' derivation='User' name='[usr:Calculation_1176283938687021057:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Calculation_1176283938683097088:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[usr:Calculation_1176283938687021057:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Calculation_1176283938683097088:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[usr:Calculation_1176283938687021057:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Action (YEAR(Data da compra),Nome do produto)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC107B8A1BDA4F009F689A837B341F65]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Data da compra:ok]' />
              <groupfilter function='level-members' level='[Nome do produto]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]'>
            <groupfilter function='member' level='[none:Moeda:nk]' member='&quot;R$&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]'>
            <groupfilter function='level-members' level='[yr:Data da compra:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]</column>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</column>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]</column>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[Action (YEAR(Data da compra),Nome do produto)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[usr:Calculation_1176283938687021057:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Categoria:nk]</rows>
        <cols>[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{37C4267D-28F0-4116-B084-BFBAB1A72567}' />
    </worksheet>
    <worksheet name='Evoluções Vendas e Quantidade'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Vendas_Reais (Vendas - Planejada e real)' name='federated.0bg83yw0v6ex55137e05l0d29o0d' />
          </datasources>
          <datasource-dependencies datasource='federated.0bg83yw0v6ex55137e05l0d29o0d'>
            <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Moeda]' role='dimension' type='nominal' />
            <column datatype='string' name='[Nome do produto]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantidade]' role='measure' type='quantitative' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Moeda]' derivation='None' name='[none:Moeda:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantidade]' derivation='Sum' name='[sum:Quantidade:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da compra]' derivation='Month-Trunc' name='[tmn:Data da compra:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Action (Nome do produto)]'>
            <groupfilter function='level-members' level='[Nome do produto]' user:ui-action-filter='[Action1_FC107B8A1BDA4F009F689A837B341F65]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Action (YEAR(Data da compra),Nome do produto)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC107B8A1BDA4F009F689A837B341F65]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Data da compra:ok]' />
              <groupfilter function='level-members' level='[Nome do produto]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]'>
            <groupfilter function='member' level='[none:Moeda:nk]' member='&quot;R$&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]</column>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[Action (Nome do produto)]</column>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[Action (YEAR(Data da compra),Nome do produto)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Quantidade:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Quantidade:qk] + [federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas:qk])</rows>
        <cols>[federated.0bg83yw0v6ex55137e05l0d29o0d].[tmn:Data da compra:qk]</cols>
      </table>
      <simple-id uuid='{540BFDCC-C79F-48BF-82CB-13F3C556C331}' />
    </worksheet>
    <worksheet name='Margem Real x Margem Planejado'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Margem Planejada x Margem Real por Categoria

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Vendas_Reais (Vendas - Planejada e real)' name='federated.0bg83yw0v6ex55137e05l0d29o0d' />
          </datasources>
          <datasource-dependencies datasource='federated.0bg83yw0v6ex55137e05l0d29o0d'>
            <column caption='MC Real' datatype='real' name='[Calculation_1277896407046963200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Vendas])-SUM([Custo])' />
            </column>
            <column datatype='string' name='[Categoria]' role='dimension' type='nominal' />
            <column datatype='real' name='[Custo]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Custos Plan R$]' role='measure' type='quantitative' />
            <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
            <column caption='MC Planejado' datatype='integer' name='[MC Real (cópia)_1161647244032258048]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Vendas Plan R$])-SUM([Custos Plan R$])' />
            </column>
            <column datatype='integer' name='[Vendas Plan R$]' role='measure' type='quantitative' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Categoria]' derivation='None' name='[none:Categoria:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1277896407046963200]' derivation='User' name='[usr:Calculation_1277896407046963200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MC Real (cópia)_1161647244032258048]' derivation='User' name='[usr:MC Real (cópia)_1161647244032258048:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[usr:MC Real (cópia)_1161647244032258048:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[usr:Calculation_1277896407046963200:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]'>
            <groupfilter function='member' level='[yr:Data da compra:ok]' member='2019' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</column>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bg83yw0v6ex55137e05l0d29o0d].[Multiple Values]</rows>
        <cols>([federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Categoria:nk] / ([federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok] / [federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{FD79C41E-4933-421A-8ED2-D842C83977F8}' />
    </worksheet>
    <worksheet name='Vendas Reais x Vendas Planejadas'>
      <table>
        <view>
          <datasources>
            <datasource caption='Vendas_Reais (Vendas - Planejada e real)' name='federated.0bg83yw0v6ex55137e05l0d29o0d' />
          </datasources>
          <datasource-dependencies datasource='federated.0bg83yw0v6ex55137e05l0d29o0d'>
            <column datatype='string' name='[Categoria]' role='dimension' type='nominal' />
            <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Moeda]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Vendas Plan R$]' role='measure' type='quantitative' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Categoria]' derivation='None' name='[none:Categoria:nk]' pivot='key' type='nominal' />
            <column-instance column='[Moeda]' derivation='None' name='[none:Moeda:nk]' pivot='key' type='nominal' />
            <column-instance column='[Data da compra]' derivation='Quarter' name='[qr:Data da compra:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Vendas Plan R$]' derivation='Sum' name='[sum:Vendas Plan R$:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas Plan R$:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Moeda:nk]' />
              <groupfilter function='member' level='[none:Moeda:nk]' member='&quot;US$&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]'>
            <groupfilter function='member' level='[yr:Data da compra:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</column>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]</column>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Categoria:nk]</rows>
        <cols>([federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names] / ([federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok] / [federated.0bg83yw0v6ex55137e05l0d29o0d].[qr:Data da compra:ok]))</cols>
      </table>
      <simple-id uuid='{FF8D1879-6F4D-412F-B715-253044F3E3B8}' />
    </worksheet>
    <worksheet name='Vendas por Ano'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#00445f' fontname='Calibri' fontsize='18'>Total de Vendas por Ano</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Vendas_Reais (Vendas - Planejada e real)' name='federated.0bg83yw0v6ex55137e05l0d29o0d' />
          </datasources>
          <datasource-dependencies datasource='federated.0bg83yw0v6ex55137e05l0d29o0d'>
            <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Moeda]' role='dimension' type='nominal' />
            <column datatype='string' name='[Nome do produto]' role='dimension' type='nominal' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Moeda]' derivation='None' name='[none:Moeda:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da compra]' derivation='Year-Trunc' name='[tyr:Data da compra:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Action (Nome do produto)]'>
            <groupfilter function='level-members' level='[Nome do produto]' user:ui-action-filter='[Action1_FC107B8A1BDA4F009F689A837B341F65]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Action (YEAR(Data da compra),Nome do produto)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC107B8A1BDA4F009F689A837B341F65]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Data da compra:ok]' />
              <groupfilter function='level-members' level='[Nome do produto]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]'>
            <groupfilter function='member' level='[none:Moeda:nk]' member='&quot;R$&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]</column>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[Action (Nome do produto)]</column>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[Action (YEAR(Data da compra),Nome do produto)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[tyr:Data da compra:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas:qk]</rows>
        <cols>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</cols>
      </table>
      <simple-id uuid='{6797F8C4-5D7F-4BF5-BAB3-8D20EC12A163}' />
    </worksheet>
    <worksheet name='Vendas por País/Cidade'>
      <table>
        <view>
          <datasources>
            <datasource caption='Vendas_Reais (Vendas - Planejada e real)' name='federated.0bg83yw0v6ex55137e05l0d29o0d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0bg83yw0v6ex55137e05l0d29o0d'>
            <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Moeda]' role='dimension' type='nominal' />
            <column datatype='string' name='[País]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='%null%' value='&quot;Brasil&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Estado]' derivation='None' name='[none:Estado:nk]' pivot='key' type='nominal' />
            <column-instance column='[Moeda]' derivation='None' name='[none:Moeda:nk]' pivot='key' type='nominal' />
            <column-instance column='[País]' derivation='None' name='[none:País:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]'>
            <groupfilter function='member' level='[none:Moeda:nk]' member='&quot;R$&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Longitude (generated)]' field-type='quantitative' max='-4214188.2673399765' min='-12872563.894824391' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Latitude (generated)]' field-type='quantitative' max='5883061.2906665318' min='-7230245.929408012' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Estado:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Estado:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Estado:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:País:nk]' />
              <lod column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Estado:nk]' />
              <color column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas:qk]' />
              <geometry column='[federated.0bg83yw0v6ex55137e05l0d29o0d].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0bg83yw0v6ex55137e05l0d29o0d].[Latitude (generated)]</rows>
        <cols>[federated.0bg83yw0v6ex55137e05l0d29o0d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0B5FF884-9782-40AF-8FD5-22815D1522A6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Visão Geral'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='73000' id='17' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='73000' id='15' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='36500' id='13' param='horz' type-v2='layout-flow' w='49299' x='800' y='37500'>
                <zone h='36500' id='7' param='horz' type-v2='layout-flow' w='49299' x='800' y='37500'>
                  <zone h='36500' id='5' type-v2='layout-basic' w='49299' x='800' y='37500'>
                    <zone h='36500' id='8' name='Vendas por Ano' w='49299' x='800' y='37500'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='36500' id='11' name='Evoluções Vendas e Quantidade' w='49299' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='73000' id='14' name='Vendas por País/Cidade' w='49101' x='50099' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='25000' id='18' name='Vendas Reais x Vendas Planejadas' w='98400' x='800' y='74000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='36500' id='11' is-fixed='true' name='Evoluções Vendas e Quantidade' w='49299' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73000' id='14' is-fixed='true' name='Vendas por País/Cidade' w='49101' x='50099' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36500' id='8' is-fixed='true' name='Vendas por Ano' w='49299' x='800' y='37500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='192' h='25000' id='18' is-fixed='true' name='Vendas Reais x Vendas Planejadas' w='98400' x='800' y='74000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BB98532F-38D9-4B5A-B086-2D43B56D7B64}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Vendas por Ano'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Categoria:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[tyr:Data da compra:ok]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17CE7992-D44D-4A78-A71F-A19DC6FC83A1}' />
    </window>
    <window class='worksheet' name='Evoluções Vendas e Quantidade'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='1' param='[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0bg83yw0v6ex55137e05l0d29o0d].[tmn:Data da compra:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[tyr:Data da compra:ok]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4647FBC-16CE-407A-8C2C-3C92FA03AF47}' />
    </window>
    <window class='worksheet' name='Descontos por Categoria'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Categoria:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Sub-categoria:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4197E3CB-9DB4-499B-AD8E-984F3DDD4589}' />
    </window>
    <window class='worksheet' name='Vendas por País/Cidade'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0bg83yw0v6ex55137e05l0d29o0d].[sum:Vendas:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Cidade:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:País:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Segmento:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[tyr:Data da compra:ok]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22B433A5-DDBB-43D0-AFF4-16E5E748DE23}' />
    </window>
    <window class='worksheet' name='10 produtos com maior venda'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AF21F78-22E1-4B99-9609-0235DA97D25D}' />
    </window>
    <window class='worksheet' name='Vendas Reais x Vendas Planejadas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Categoria:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Moeda:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C22195C9-E335-4A44-932C-DEB646CBCBB8}' />
    </window>
    <window class='worksheet' maximized='true' name='Margem Real x Margem Planejado'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[:Measure Names]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Categoria:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[none:Segmento:nk]</field>
            <field>[federated.0bg83yw0v6ex55137e05l0d29o0d].[yr:Data da compra:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{080A2076-418A-489C-80B3-892B35B68EEB}' />
    </window>
    <window class='dashboard' name='Visão Geral'>
      <viewpoints>
        <viewpoint name='Evoluções Vendas e Quantidade'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vendas Reais x Vendas Planejadas' />
        <viewpoint name='Vendas por Ano'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vendas por País/Cidade'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{4A6151D8-E763-41BF-A0FC-F5459CBED88C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='10 produtos com maior venda' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='Descontos por Categoria' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Evoluções Vendas e Quantidade' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Margem Real x Margem Planejado' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='144' name='Vendas Reais x Vendas Planejadas' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACQCAYAAABeUmTwAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARbElEQVR4nO3df1RUdf7H8ed+RVJIj1lrtppmtbpauSqjAi6jQMK30NTFbGVKN6w03fU3
      oVLwFUUBNXQ9lPgNEkvLo7TRrpqYFOPyS4bc+BrrjxbRNLQV3UBQYdjP948ZkJ+KgpF+3o9z
      OAfm3s+993O5r7mfuTN33j9TSimE0NR/tfUGCNGWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFqT
      AIhWZbFY2noTbogEQGhNAiC0JgEQWpMACK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFqT
      AAitSQCE1iQAQmsSAKE1CYDQmgRAaE0CILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhN
      AiC0JgEQWpMACK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFqTAAitSQCE1iQAQmsSAKE1
      CYDQmgRAaE0CILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITW
      JABCaxIAoTUJgNCaBEBoTQIgtCYBEFqTAAitSQCE1iQAQmsSAKE1CYDQmgRAaE0CILQmARBa
      kwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIAobWfKaXUtWaw
      WCw/1rYI8aO7bgCEuBEWiwWDwdDWm9FsMgQSWpMACK1JAITWJADijmAtP87+xBXMmehJmLne
      tIIkFk70xM1gwGP8QhLzSmqmtSAAJ0g0GTAYDCzYVVZnStmuBRgMBgymRE7c/ApuAds2199B
      Nz/fT5M1P5bfuo1hWep5rG29MT+KE2xbshLLLyazcqax7iRrLjEh2YxctZP9Fgv7No6jaNly
      9tgP2RafAXz9/DiQnVtrR1vJzT7Oiy/6NXMJZsIMJhJblBQzYYbb94BtDnOYAUNNB6+1z46z
      ffVenojayhteXXFocom2kJtatuN/InpjWruReaP74FS/w6cPUez5EmP7OOEAOHbzYOEfO7Iv
      rQwou8b+aSaHkd54RWXzFUZcAPiK7Dw3vOZd5N2Mli69uYwsvcPfrzAutdC8HvZhcsLHzZiv
      N1O3WJjass366buvO//5ZAt7x4cwupsjVJRw5j+OXDh+AnBuhdcADi4Mf9xMVr797/wsMgcO
      59d1Zirms6W/w8fDNmTy8JlFfH4ZnEjEZJjPTo6w3t82rfpJruRADC94utnmH7+QpAL7OcYc
      hsGUSEFBEnPHuNmfweo+IxZ/tpTf+XjYhmEePsyKz6fuIK0ha1EqK1+wjRPdPOewvajWxJID
      xNinGTzGszCpoOHQwlpA0sLxeBgMGNw8eSHmALaRppWCpIWMr+l7IO8eqV5uHom127x75Gpf
      CgpImjsGN/sw0hxmf7a+zj4LtPe77li3sWXWH+aVcCAm0P4/8mD8wkRqDZVvX86+vB7ahQ+e
      98ZgMODmG8iKPac48/054DKom1aoNgW4qNA0pc7tmKECNhXaHt00RQV9elGptFDlErBJ2R49
      p77+8pj64YpSSlWq4o9mK5cp76tTSiml0lSoS4CyN7c5s0PNeDZSZRRX2ubfF6p8JmxQR5Sy
      LXfMFBX4crQyn71ib1B3Gee+/lIds61MVRZ/pGa7TFHvn6q7zXUdURsmuKop8fmqrFIpdSVf
      xU6qnu+M2jHjWRWZUawqlVKVxftUqM8EteFI7faVyhLtp2ZsPamuKKXUlSMqfspvbPvh0qcq
      yGW2+sjel7LvctRXhdXLdVU+oSnq7BWl1JUf1LGTZ+19GaOmBL6sos1nVU0PQ11q9nGT+8w1
      QK39slhVVu8z1yD16UXVxDLr7oszO2Yo14C16sviSqUqi9W+UB/lGvSpunjtg6CBnJycG2zR
      ytJCG/n/1pMerqZsKlRKFaoWD4EA7jW4QqSF4ql3Y8m6j1GrnSG39hztseZtIHB+OoWllbaH
      +g1p8gVaWW4GOQVp5Phsr/WoH2eAvgBlPTGtDsKjc+Pt21vz2BA4n/TCUmxr68eQa70aPJGJ
      +aQP0wP74wSAE87Ve6Ysl4ycAtJyfKizNTUbA3CULPMZcoom4L7m6jz9zpyDDn14pNcB/jRn
      EYVPjsTD6M2gPtXLdWdO2mi6OQJ05tEHOwOHgTJ6mlYT1FQHG1GWm0GOu4nVg23j/q5egQQ8
      7E9GLvgauc4yy8jNyMHdtJrBXR2ArngFBvCwfwa5+GJspMXty8oB85f091oMXGn5awAAeg/F
      /VQ82d93JAN3ljjXm54bx9zEuwjalsZT3Rxtw5i46yxzUBA733mO+xub9kBfHmny2Mglbm4i
      dwVtI+2pbjhiJuy6K7ueQQTtfIfnGt2Yap2Z+FYKi4Y13KXTP0xmRM4X/G33bpa/E82DC3ew
      /slrLesB+jbdwZt0K5Z5O7jEiaOnueehR+nsWMG3f3md8H9MJHaRA+DQWu8DDMDVeIj02HTO
      uRq4t/7kK5e55Hwv3bs42q7XZn5Ta6Izd3cu4ujR81ixYrWCs8swBv09gTV/+ZYKgIoSvtmf
      08xLqle4fMmZe7t3wdFazvH9mXxzvSY9+vNE5/3s2f09FVgpLzrOqerxr7MLwwb9nYQ1f+Fb
      28ZQ8s1+cupsTF+GjoDk2DgOnrcCVsqLDpGZXwzFuezKLqHX0EnMWL6WsAldsOT9E5xdcB+a
      wbrovXxfYe/jt983q4eN7zN3hmZs4Z2DtsfOpyawtcALd5fmLc/FfSgZW96xbb/1PKkJWynw
      cqdZzduc7SqgwWDAMH8nO+fbfw8zAx25nL6Cid4GDAZvpv35AULXm+htb9k6ZwDAxetJgqab
      8d/cu+HEYSb+0GMaM92306H/aGYY7qvdkklzhjAn3AfXxR3xj93P4uH+LIsuICQyAPell6Bj
      VwZ6LiDMozlbMgzTH3owbaY72zv0Z/QMA/ddr4nDMGZGjmVW8Djc33Cg5ygfHgHuBuB+/JdF
      UxASSYD7Ui7Rka4DPVlQZ2McGDZzLTPCw5nv9y6lle3p9NBgAhavwq0DnP5gEeNeK7Q/PoKF
      0cMAB/yj4rgYHoq/+2Iute9E/1c28N6Lzelj4/ssat1J5gaPw/X8JTr2HMVLcaH41j8bN+F+
      /yjWnZxL8DhXzl/qSM9RLxEX6kszm7cx21XApU1M7fdiAilN7Ff5NKhoVfJpUCFuIxIAoTUJ
      gNCaBEBo7bpXgcrLy3+M7RB3kNvpmJEzgNCaBEBoTQIgtCYBEFprtY9CCNF2/kV67Ere3vUV
      J0srad+pF66vLCd83EO0A6ou5PHh6mi2Zp2klE708prD6kU+dG/XojPASbZMM2I0GlmSUvdV
      f3nKEoxGI8ZpWzhZr1XV4Y0EeE8kKu0CVTe/ciGuunyGf3d/nqgPd2M2m9n94RL67Qoj8RjA
      d+yI3MwVvwi2p5gx797E/Hu2EfnXYqAVhkDevr5Ycg7WOpirOJhTyPPP+zYy9wk+Wvc5j4Un
      EDzyHtrd9Fpt4Zu2pX68hJY6PIGf/xB6dHIEwLHTAIwjOlF6EeB+Jq5YTaB7b5zaAY4/Z8jT
      I7nnou0ewRYHwOE3oxiZYyGv5pE8LIeGM/SxxubuzbNvf0DIiJZ+Lr0Xpngz8aZeLVyOuNNU
      lZ8lf1cUa75+igmDAdrRrvYzbdUZUhK/5lcetmOnFe4JHszQAenkHLb/fTiH7McNDKw3W0lu
      LK+O88FoNOIzOYQth0qAKtIjvJm08XDNfFXpEXhXD51Kcol92Q9voxGjz2RCkgvtZxrbGSAi
      3d6mMJmQybZlG33G8er7x1rcLXG7SSfCaMTzv3/P2m9cWbTMj/pPjxWndxHxh3iYvoLn7BNb
      4SqQEz4zxpG9IZliikneUMjv542oM7wpT1nCmKRfsiY5BbPZTMoH0yFmDBHp7RixKBrXT8JJ
      OAZUpRMZWsTMlSZ6laewZMw8th2x39Z4+TT710whMr3hFhSkbiOrpDe/mTSdxVF/Ys3kX7a8
      W+I2M4IQsxmzeTcbZ4+kR04E07d9B0DVwViCN38DPZ4m5O0QfLpfPTpb5zJoLxeGf5dN7r9y
      yWY4Lk430LbdIEZ6lfDZ/mNUZX1B6hOjGdWteuJA5uwwYzZf/QkZ0XARvwzcxIerpmHo+E/2
      Rr/M+OCdNPfeKnEH+L+dJGQU8O9y2/igqvwEuz49SLf7ugDF/DXpCpNMj+LYoOHJ1nof4FcM
      HZFP5sZMiocObnBLpNOg4QzJ3samvAtUUcWFtPfYXjgSV/sYzcVzNCXpmXz4RSrDnx5ta+80
      CJeBeby3fhen7bcilhZkkNvgdW8xB1MslD44hN9OCyVy8Vi6HDxEQet0TNwOunfnrtRVTB3v
      aRtiPxtC+q/+hyBvJ+AYhzM/Zp6n7YplzU9EOtCr9d4HGGz05I056TyzsZEXpt3GER59iuA3
      nsPzwmU69PBg6rpgvKvPFIN9eab0FeJSRxI2r/rBbox/fRnHl77Ji09GcpkO3POYkT8udq+3
      8I7w3Q5Cf/fG1WvAs5cztLU6Jn76fu6C6XUXTI1OdCV4n5ngJppe95bI2+mTfaLt5efnM2DA
      gLbejGaTj0IIrUkAhNYkAEJrEgChteteBXJyupGL+kLcXseMnAGE1iQAQmsSAKE1CYDQmgRA
      3BEqvt3LykAfW7kpDx9mxeXRoMJTWQbLfGsXG2xBAMxh9u9gr/fzY1cdPJFoqtMhoaMM1ryW
      xePz32efxULWnjiePBpGXJ0qRVbyN8Vx+bkX6Ffr0ZsOgHGpBYvFgiXpj/TDjzcttr+3TG2k
      PsBP3p1fZvXONoyg995g7OPdcAQcnPow1m8AF2tVRrQWbGb9d1MJ9u5Sp6UMgYCaAgt3VjEs
      jTjgUPsdrZI84j65G9+a8jZnSY45zNhgL+rfjHuLAlC7NKgbni/EcKB6QGYtInXlC3i62ctx
      Lv2MYnvJzjnrEq+WtJ+8ntzqBJccIKZmfDeehYmNjO9qrXeip5t9vStJLbLWTCtKXWkvveqG
      58SZvPLsMmxP+i0vsyp+CqycPxjHrMWZeIQvxt1e3qZk1xqyn3qdpxu5Ff2WBMCaG8Psz1xY
      v8+CxZJGnOffWbB8D2VYyY35PSGHPXlrXxaWrD28PeUxOtjblTu5sGDzXjIz/pcJFxP5JBfg
      LEnBc7D8OorkLAtZybNx3jqd5XsaHpLW3BhejVWYNqfZ13uYkFnxHAU4Gs+skMO4vrmTLEsm
      e1cM4ofjTZSO/MUzLN+xD4vFQlbyqzi8HcXHp2/FnhKtp4KjiYtYkefGytjpDKw+2MvMrPt8
      OAsaO/q5RV+MdTTLzJmcIibUrRnKOY6SZXbk+ahA+jvZVv9AHyewl7/7Rb/HecAJoCv3doYf
      oKacqGn1YGwVPL0IDHgY/6v1P+us19E/igkP2m5+6xs4DZ+34sg8MZ27Ms2c9JrGdHsZUe66
      q8nO33CZVdHmziaFse3BJUR6da3zfz39cTzJn39NsmFlnfkNO/1407L01n0zXOeJb5GyaFi9
      FeQ3MfePxMGhGR2+FWVWxa2Vy+a/DeKVmK4N/r89TIlYat8qdiIRU0Iftthf8N2SIVBfW81Q
      4g6exwpYy4s4lJlPMX1xNVbwflQC/yi3grWcouNF1x5f28uJbnnnILYKnqkkbC3Aq5H6n31d
      jVQkxfPnbyuACo4mxJPSy4hbb+jR/wk670+umfb98VNNvI64iTKrom2dPsyh/avwu+FL8qdv
      zRnAYdhM1s4IJ3y+H++WVtK+00MMDljMKjcHXOZtImLVa8z0fovSyo70HBtGfNi1vsbkfvyj
      1nFybjDjXM9zqWNPRr0UR2gj9T8dXObx9qxFvDZlJBGl0Kn/M0TETrMVdB82k8ixswie5E6E
      Q09G+VwthFrXTZRZFW2rh4lES+N3BDfQeypbauqp9tCoTGpZEccvONOjZ2fbM/v2BQTsG8XH
      TVWjFzfldiuTqs+3Q1/+ms1zI/i0sJRK2tvODtH+cvBr7v8B/0xd8kuF9ykAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Vendas por Ano' width='192'>
      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
      dSuOReSGmPfGiETo+dwXLBkr+y/+nPRNdX/wf362fze9E+PXfF4WFxXzydplACiKosieUdia
      HAJZzBjvwUxErvk4iisNNVByzce50UkALBbb8QP0rgPXfBytYh2++35xzce50ckhkLA1CYCw
      NQmAsDUJgLA1698EGymG+3tQAqXkelJ0d3czGU3iTsumrKwAwqO0947gzyulKCcNIz7F+a4+
      8OVSUZJDLDKJpnlxu1XGRkbJyMrFKfWI4ipZvgeIBPs5vmsbR7sjJCeGaGzuIB6Pk0imMBJh
      jhw8THAixIlD9QyFdZobDtE1OEpHw15ah5MMDHQyNholOniO462j3FSf4gnLWbsHMGO0netk
      9sKFtACxqEnhjFksmTcLuBAOJVDGquULGeg8ymBvkEhcYcUta1CmOmhs7SE/G5LREIc6RllV
      tw6XbP3F+2BtNWJHM2bhHMocrbREAGeK3oZ9NB87TMHsWmpnZuB2+S6U47o96OMRHG+W4zp8
      cLEcd+fFcty0G7Ac16pOTsMw/uDzIOW4F1gagLON9bSO+zgRH6JHDVJz/wbu3PwpnGqCI3t3
      EYwsYio8hm7MIBIM4fAXExtvJhbXYXIY05uF6jO5/c759LaepmeynFK/64Yqx42oKroF46iq
      +gcLaaUc9wJLA7Dhvi+yAUid38drkRp80T527j5LOJEivXA21QXZRM838PTWrXj8pdy6KcB4
      2MOrL2wFzcctd1QTHw6iudJZua6WHbsP4V+/hoBHrnUUV2daLoXQylZzGyqaMofb756JYZho
      TheaCjVr72BuUkdzONE0BX/1LRTOTYHiwOlUMdOqAQVFTWdTXRaKJmdyxdWblgAoqnZxYAWn
      8x2HK6oDt/tts6VquFza26Z9a4XXHHIpk3h/ZPMpbE0CIGxNAiBsTQIgbO3/AdTse0ydljjc
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vendas por País/Cidade' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Visão Geral' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
